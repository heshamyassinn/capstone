version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  lint-app:
    docker:
      - image: circleci/python:3.7.3-stretch
    steps:
      - checkout
            # Download and cache dependencies
      - restore_cache:
          keys:
            - app-dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv capstone-env
            . capstone-env/bin/activate
            make install
      - run:
          name: run lint
          command: |
            . capstone-env/bin/activate
            make lint
      - save_cache:
          paths:
            - ./capstone-env
          key: app-dependencies
    
  build-docker:
    machine: true
    steps:
      - checkout
            # Download and cache dependencies
      - restore_cache:
          keys:
            - app-dependencies
      - run:
          name: Build Docker
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker build -t heshamyassin/capstone:${CIRCLE_WORKFLOW_ID:0:7} .
            docker image ls
            docker push heshamyassin/capstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker tag heshamyassin/capstone:${CIRCLE_WORKFLOW_ID:0:7} heshamyassin/capstone:latest
            docker push heshamyassin/capstone:latest
      - save_cache:
          paths:
            - ./capstone-env
          key: app-dependencies

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: eks_config.yml
          resource-name: deployment/capstone
  
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstone
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get svc
            kubectl get svc > test-cluster.txt
            kubectl get nodes
            kubectl get deployment
            if grep -q "capstone" test-cluster.txt
            then
              exit 0
            else
              exit 1
            fi
  
workflows:
  default:
    jobs:
      - lint-app
      - build-docker:
          requires: [lint-app]
      - aws-eks/create-cluster:
          cluster-name: capstoneproj
      - create-deployment:
          cluster-name: capstoneproj
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: capstoneproj
          container-image-updates: capstone=heshamyassin/capstone:latest
          # post-steps:
          #     - kubernetes/delete-resource:
          #         resource-names: capstone
          #         resource-types: deployment
          #         wait: true
          record: true
          requires:
              - create-deployment
          resource-name: deployment/capstone
      - test-cluster:
          cluster-name: capstoneproj
          requires:
            - aws-eks/update-container-image
      - aws-eks/delete-cluster:
          cluster-name: capstoneproj
          requires:
            - test-cluster
      